{"ast":null,"code":"import _classCallCheck from\"C:/Users/tomsu/Documents/GitHub/seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/tomsu/Documents/GitHub/seasons/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/tomsu/Documents/GitHub/seasons/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/tomsu/Documents/GitHub/seasons/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import ReactDOM from'react-dom';import SeasonDisplay from'./SeasonDisplay';import Spinner from'./Spinner';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={lat:null,errorMessage:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.navigator.geolocation.getCurrentPosition(function(position){return _this2.setState({lat:position.coords.latitude});},function(err){return _this2.setState({errorMessage:err.message});});}},{key:\"renderContent\",value:function renderContent(){if(this.state.errorMessage&&!this.state.lat){return/*#__PURE__*/React.createElement(\"div\",null,\"Error: \",this.state.errorMessage);}if(!this.state.errorMessage&&this.state.lat){return/*#__PURE__*/React.createElement(SeasonDisplay,{lat:this.state.lat});}return/*#__PURE__*/React.createElement(Spinner,{message:\"Please accept location request\"});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.renderContent());}}]);return App;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(App,null),document.querySelector('#root'));","map":{"version":3,"sources":["C:/Users/tomsu/Documents/GitHub/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","renderContent","Component","render","document","querySelector"],"mappings":"oeAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,GAGMC,CAAAA,G,2TACFC,K,CAAQ,CAAEC,GAAG,CAAE,IAAP,CAAaC,YAAY,CAAE,EAA3B,C,gEAGR,4BAAoB,iBAChBC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,SAACC,QAAD,QAAc,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEP,GAAG,CAAEM,QAAQ,CAACE,MAAT,CAAgBC,QAAvB,CAAd,CAAd,EADJ,CAEI,SAAAC,GAAG,QAAI,CAAA,MAAI,CAACH,QAAL,CAAc,CAAEN,YAAY,CAAES,GAAG,CAACC,OAApB,CAAd,CAAJ,EAFP,EAIH,C,6BAEL,wBAAgB,CACZ,GAAI,KAAKZ,KAAL,CAAWE,YAAX,EAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,CAAgD,CAC5C,mBAAO,yCAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP,CACH,CAED,GAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,EAA4B,KAAKF,KAAL,CAAWC,GAA3C,CAA+C,CAC3C,mBAAO,oBAAC,aAAD,EAAe,GAAG,CAAE,KAAKD,KAAL,CAAWC,GAA/B,EAAP,CACH,CAED,mBAAO,oBAAC,OAAD,EAAS,OAAO,CAAC,gCAAjB,EAAP,CACH,C,sBAEG,iBAAS,CACL,mBAAO,+BAAM,KAAKY,aAAL,EAAN,CAAP,CACP,C,iBAzBiBlB,KAAK,CAACmB,S,EA6BxBlB,QAAQ,CAACmB,MAAT,cACI,oBAAC,GAAD,MADJ,CAEIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = { lat: null, errorMessage: '' };\r\n\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => this.setState({ lat: position.coords.latitude }),\r\n            err => this.setState({ errorMessage: err.message })\r\n            );\r\n    }\r\n\r\nrenderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n        return <div>Error: {this.state.errorMessage}</div>\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat){\r\n        return <SeasonDisplay lat={this.state.lat} />\r\n    }\r\n\r\n    return <Spinner message='Please accept location request' />;\r\n}\r\n\r\n    render() {\r\n        return <div>{this.renderContent()}</div>\r\n}\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"]},"metadata":{},"sourceType":"module"}